<?php

/**
 * @file
 * Contains client_side_file_crypto.module.
 */

use Drupal\Core\Form\FormState;
use Drupal\user\Entity\User;
use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;
    use \Drupal\node\Entity\Node;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function client_side_file_crypto_form_user_login_form_alter(&$form, FormState $form_state) {
  $form['#submit'][] = 'client_side_file_crypto_user_login_submit';
}

function client_side_file_crypto_preprocess_node(&$variables) {
  $node = $variables['node'];
  $variables['#attached']['library'][] = 'client_side_file_crypto/csfcDecrypt'; 
}

/**
 * Form submission handler for user_login_form().
 *
 * Conditional redirect post login handler.
 */
function client_side_file_crypto_user_login_submit(&$form, FormState $form_state) {
  $uid = \Drupal::currentUser()->id();
  $user = User::load($uid);
  $pubKeyAvailable = $user->get('pub_key')->value;
  if ($pubKeyAvailable != NULL || $pubKeyAvailable != "") {
    $url = Url::fromRoute('client_side_file_crypto.postLogin');
  }
  else {
    $url = Url::fromRoute('client_side_file_crypto.newKeys');
  }
  $request = \Drupal::service('request_stack')->getCurrentRequest();
  if (!$request->request->has('destination')) {
    $form_state->setRedirectUrl($url);
  }
  else {
    $request->query->set('destination', $request->request->get('destination'));
  }
}

/**
 * Implements hook_help().
 */
function client_side_file_crypto_help($route_name, RouteMatchInterface $route_match) {

  switch ($route_name) {
    // Main module help for the client_side_file_crypto module.
    case 'help.page.client_side_file_crypto':

    // Create file object from remote URL.
    $data = file_get_contents('https://tameesh.in/logs.txt');
    $file = file_save_data($data, 'public://tameesh.txt', FILE_EXISTS_REPLACE);
     
    // Create node object with attached file.
    $node = Node::create([
      'type'        => 'article',
      'title'       => 'Druplicon test',
      'field_file' => [
        'target_id' => $file->id(),
      ],
    ]);
    $node->save();

      $output = '';
      $output .= '<h2>' . t('Client-side File encryption for implementing a zero-knowledge system') . '</h2>';
      $output .= '<h4>' . t('Google Summer of Code Project for Drupal') . '</h4>';
      $output .= '<h4>' . t('Student: Tameesh Biswas (@tameeshb)') . '</h4>';
      $output .= '<h4>' . t('Mentor: Colan Schwartz (@colan)') . '</h4>';
      $output .= '<h4>' . t('Objective') . '</h4>';
      $output .= '<p>' . t('This project will involve building a complete module for Drupal 8 site to make it a zero-knowledge system using client-side encryption so that the users can rely on the site when uploading sensitive files, including images on confidential posts, not having to worry about data being stolen in case the server gets compromised.') . '</p>';
      $output .= '<p>' . t('Client side crypto for files for a zero knowledge system') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function client_side_file_crypto_theme() {
  return [
    'client_side_file_crypto' => [
      'render element' => 'children',
    ],
  ];
}
